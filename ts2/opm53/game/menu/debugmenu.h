// STATUS: NOT STARTED

#ifndef GAME_MENU_DEBUGMENU_H
#define GAME_MENU_DEBUGMENU_H

typedef unsigned char u8;

// warning: multiple differing types with the same name (fields size not equal)
struct menuitem_s {
	u8 *text;
	u8 xpostype;
	u16 xpos;
	void *xposref;
	u8 ypostype;
	u16 ypos;
	void *yposref;
	u8 flags;
	void *actiondata;
	u32 spare;
};

typedef menuitem_s menuitem;

// warning: multiple differing types with the same name (fields size not equal)
struct menu_s {
	u8 *title;
	u8 numitems;
	menuitem *curitem;
	u32 spare;
	menuitem items[0];
};

typedef menu_s menu;
extern u8 *ontext;
extern u8 *offtext;
extern int padlinkedit;
extern int propedit;
extern int ambientlightedit;
extern int viewportals;
extern int viewportalrects;
extern int viewfloors;
extern int viewwalls;
extern int viewpropfloors;
extern int viewpropwalls;
extern int viewvolumes;
extern int viewroombb;
extern int viewpropbb;
extern int viewweatherbb;
extern int viewfxbb;
extern int viewguns;
extern int viewbg;
extern int viewhud;
extern int displaypos;
extern int turtlecpu;
extern int turtlegs;
extern int showglows;
extern int disableambientlight;
extern menu debugmenu;
extern menuitem dm1b;
extern menuitem dm1c;
extern menuitem dm1d;
extern menuitem dm1e;
extern menuitem dm1f;
extern menuitem dm1g;
extern menuitem dm1h;
extern menuitem dm1i;
extern menuitem dm1j;
extern menuitem dm1b2;
extern menuitem dm1c2;
extern menuitem dm1d2;
extern menuitem dm1f2;
extern int invincible;
extern int invisible;
extern int collisions;
extern int unlock;
extern int notimer;
extern int blood;
extern int pausewithtri;
extern int screendumpwithsquare;
extern int movewhenpaused;
extern menu debugmenu2;
extern menuitem dm2a;
extern menuitem dm2b;
extern menuitem dm2c;
extern menuitem dm2d;
extern menuitem dm2e;
extern menuitem dm2f;
extern menuitem dm2g;
extern menuitem dm2h;
extern menuitem dm2i;
extern menuitem dm2a2;
extern menuitem dm2b2;
extern menuitem dm2c2;
extern menuitem dm2d2;
extern menuitem dm2e2;
extern menuitem dm2f2;
extern menuitem dm2g2;
extern menuitem dm2h2;
extern menuitem dm2i2;
extern int displayspeed;
extern int displayperfstats;
extern int displayrooms;
extern int showenemystats;
extern int showenemyalertstates;
extern int showrankingstype;
extern menu debugmenu3;
extern menuitem dm3a;
extern menuitem dm3b;
extern menuitem dm3c;
extern menuitem dm3d;
extern menuitem dm3e;
extern menuitem dm3f;
extern menuitem dm3g;
extern menuitem dm3h;
extern menuitem dm3i;
extern menuitem dm3j;
extern menuitem dm3a2;
extern menuitem dm3b2;
extern menuitem dm3c2;
extern menuitem dm3h2;
extern menuitem dm3i2;
extern menuitem dm3j2;
extern menu debugmenu4;
extern menuitem dm4a;
extern menuitem dm4b;
extern menuitem dm4c;
extern menuitem dm4d;
extern menuitem dm4e;
extern menuitem dm4f;
extern menuitem dm4g;
extern menuitem dm4h;
extern menuitem dm4i;
extern menuitem dm4j;
extern menuitem dm4k;
extern menuitem dm4l;
extern menuitem dm4m;
extern menuitem dm4n;
extern menuitem dm4o;
extern menuitem dm4p;
extern menuitem dm4a2;
extern menuitem dm4b2;
extern menuitem dm4c2;
extern menuitem dm4d2;
extern menuitem dm4e2;
extern menuitem dm4f2;
extern menuitem dm4g2;
extern menuitem dm4h2;
extern menuitem dm4i2;
extern menuitem dm4j2;
extern menuitem dm4k2;
extern menuitem dm4l2;
extern menuitem dm4m2;
extern menuitem dm4n2;
extern menuitem dm4o2;
extern menuitem dm4p2;
extern menu debugmenu5;
extern menuitem dm5a;
extern menuitem dm5b;
extern menuitem dm5c;
extern menuitem dm5a2;
extern menuitem dm5b2;
extern menuitem dm5c2;
extern menu debugmenu6;
extern menuitem dm6a;
extern menuitem dm6b;
extern menuitem dm6a2;
extern menuitem dm6b2;
extern int debugmenujoymode;

void startgameview(menuitem *item);
u8* getgameview(menuitem *item);
void startthirdpersonview(menuitem *item);
u8* getthirdpersonview(menuitem *item);
void startPropView(menuitem *item);
u8* getpropview(menuitem *item);
void toggledisplaypos(menuitem *item);
u8* getdisplaypos(menuitem *item);
void toggleinvincible(menuitem *item);
u8* getinvincible(menuitem *item);
void toggleinvisible(menuitem *item);
u8* getinvisible(menuitem *item);
void togglecollisions(menuitem *item);
u8* getcollisions(menuitem *item);
void toggleunlock(menuitem *item);
u8* getunlock(menuitem *item);
void togglenotimer(menuitem *item);
u8* getnotimer(menuitem *item);
void toggleblood(menuitem *item);
u8* getblood(menuitem *item);
void togglepausewithtri(menuitem *item);
u8* getpausewithtri(menuitem *item);
void togglescreendumpwithsquare(menuitem *item);
u8* getscreendumpwithsquare(menuitem *item);
void togglemovewhenpaused(menuitem *item);
u8* getmovewhenpaused(menuitem *item);
void notdone(menuitem *item);
void toggledisplayspeed(menuitem *item);
void toggledisplayperfstats(menuitem *item);
void toggledisplayrooms(menuitem *item);
void toggleshowenemystats(menuitem *item);
void toggleshowenemyalertstates(menuitem *item);
void toggleshowrankingstype(menuitem *item);
u8* getdisplayspeed(menuitem *item);
u8* getdisplayperfstats(menuitem *item);
u8* getdisplayrooms(menuitem *item);
u8* getshowenemystats(menuitem *item);
u8* getshowenemyalertstates(menuitem *item);
u8* getshowrankingstype(menuitem *item);
void toggleviewhud(menuitem *item);
u8* getviewhud(menuitem *item);
void toggleviewportals(menuitem *item);
u8* getviewportals(menuitem *item);
void toggleviewportalrects(menuitem *item);
u8* getviewportalrects(menuitem *item);
void toggleviewfloors(menuitem *item);
u8* getviewfloors(menuitem *item);
void toggleviewwalls(menuitem *item);
u8* getviewwalls(menuitem *item);
void toggleviewpropwalls(menuitem *item);
u8* getviewpropwalls(menuitem *item);
void toggleviewpropfloors(menuitem *item);
u8* getviewpropfloors(menuitem *item);
void toggleviewvolumes(menuitem *item);
u8* getviewvolumes(menuitem *item);
void toggleviewguns(menuitem *item);
u8* getviewguns(menuitem *item);
void toggleviewbg(menuitem *item);
u8* getviewbg(menuitem *item);
void toggleviewroombb(menuitem *item);
u8* getviewroombb(menuitem *item);
void toggleviewpropbb(menuitem *item);
u8* getviewpropbb(menuitem *item);
void toggleviewfxbb(menuitem *item);
u8* getviewfxbb(menuitem *item);
void toggleviewweatherbb(menuitem *item);
u8* getviewweatherbb(menuitem *item);
void toggleviewglows(menuitem *item);
u8* getviewglows(menuitem *item);
void toggledisableambientlight(menu *item);
u8* getdisableambientlight(menuitem *item);
void togglepadlinkedit(menuitem *item);
u8* getpadlinkedit(menuitem *item);
void togglepropedit(menuitem *item);
u8* getpropedit(menuitem *item);
void toggleambientlightedit(menu *item);
u8* getambientlightedit(menuitem *item);
void debugmenuSetJoyMode(int newmode);
int debugmenuGetJoyMode();
void debugmenuStart();
void debugmenuTick();
void debugmenuGfx();
void debugmenuEnd();

#endif // GAME_MENU_DEBUGMENU_H
